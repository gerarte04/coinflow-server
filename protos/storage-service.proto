syntax = "proto3";

package storage_service;

option go_package = "gen/storage_service/golang";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

message Transaction {
	string id = 1;
	string target = 3;
	string description = 4;
	string type = 5;
	string category = 6;
	double cost = 7;
	google.protobuf.Timestamp timestamp = 8;
}

// Requests ----------------------------------

message GetTransactionRequest {
	string tx_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListTransactionsRequest {
	string user_id = 1 [(google.api.field_behavior) = REQUIRED];
	google.protobuf.Timestamp begin_time = 2;
	google.protobuf.Timestamp end_time = 3;

	int32 page_size = 4;
	int32 page_token = 5;
}

message CreateTransactionRequest {
	string user_id = 1 [(google.api.field_behavior) = REQUIRED];
	Transaction tx = 2 [(google.api.field_behavior) = REQUIRED];
	bool with_auto_category = 3;
}

// Responses ---------------------------------

message ListTransactionsResponse {
	repeated Transaction txs = 1;
	int32 next_page_token = 2;
}

// Service -----------------------------------

service Storage {
	rpc GetTransaction(GetTransactionRequest) returns (Transaction) {
		option (google.api.http) = {
			get: "/v1/transaction/id/{tx_id}"
		};
	}
	rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
		option (google.api.http) = {
			get: "/v1/transaction/period"
		};
	}
    rpc CreateTransaction(CreateTransactionRequest) returns (Transaction) {
		option (google.api.http) = {
			post: "/v1/commit"
			body: "tx"
		};
	}
}
