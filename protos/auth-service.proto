syntax = "proto3";

package auth_service;

option go_package = "gen/auth_service/golang";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

message User {
    string id = 1;
    string login = 2;
    string password = 3;

    string name = 4;
    string email = 5;
    string phone = 6;

    google.protobuf.Timestamp registration_timestamp = 7;
}

// Requests ----------------------------------

message LoginRequest {
    string login = 1 [(google.api.field_behavior) = REQUIRED];
    string password = 2 [(google.api.field_behavior) = REQUIRED];
}

message RefreshRequest {
    string refresh_token = 1 [(google.api.field_behavior) = REQUIRED];
}

message CreateUserRequest {
    User usr = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetUserRequest {
    string user_id = 1 [(google.api.field_behavior) = REQUIRED];
}

// Responses ---------------------------------

message LoginResponse {
    string access_token = 1;
    string refresh_token = 2;
}

message RefreshResponse {
    string access_token = 1;
    string refresh_token = 2;
}

// Service -----------------------------------

service Auth {
	rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/auth/login"
        };
    }
    rpc Refresh(RefreshRequest) returns (RefreshResponse) {
        option (google.api.http) = {
            post: "/v1/auth/refresh"
        };
    }
	rpc CreateUser(CreateUserRequest) returns (User) {
        option (google.api.http) = {
            post: "/v1/auth/register"
            body: "usr"
        };
    }
    rpc GetUser(GetUserRequest) returns (User) {
        option (google.api.http) = {
            get: "/v1/user/{user_id}"
        };
    }
}
