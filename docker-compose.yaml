services:
  restful-api:
    build:
      dockerfile: restful-api/Dockerfile
    env_file: .env
    ports:
      - 8080:8080
    depends_on:
      collection-service:
        condition: service_started
      postgres:
        condition: service_healthy

  collection-service:
    build:
      dockerfile: collection-service/Dockerfile
    env_file: .env
    depends_on:
      classification-service:
        condition: service_started
      postgres:
        condition: service_healthy

  classification-service:
    build:
      dockerfile: classification-service/Dockerfile
    env_file: .env

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /home/${USER}/.pgdata:/var/lib/postgresql/data/pgdata
      - ./migrations/data:/etc/postgres/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    tty: true
    stdin_open: true
