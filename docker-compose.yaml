services:
  envoy-gateway:
    image: envoyproxy/envoy:v1.34-latest
    ports:
      - 8080:8080
    environment:
      - AUTH_JWKS=${AUTH_JWKS}
    volumes:
      - ./envoy/envoy-gateway.yaml:/etc/envoy/envoy.yaml
      - ./envoy/lua:/etc/lua
      - ./gen/descriptor_set.pb:/etc/protos/descriptor_set.pb
    depends_on:
      auth-service:
        condition: service_started

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    environment:
      - PRIVATE_KEY_PEM=${PRIVATE_KEY_PEM}
      - PUBLIC_KEY_PEM=${PUBLIC_KEY_PEM}
    ports:
    - 5053:5053
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  storage-service:
    build:
      context: .
      dockerfile: storage-service/Dockerfile
    depends_on:
      collection-service:
        condition: service_started
      postgres:
        condition: service_healthy

  collection-service:
    build:
      context: .
      dockerfile: collection-service/Dockerfile
    environment:
      - TRANSLATE_API_ADDRESS=${TRANSLATE_API_ADDRESS}
      - TRANSLATE_API_KEY=${TRANSLATE_API_KEY}
    depends_on:
      classification-service:
        condition: service_started
      postgres:
        condition: service_healthy

  classification-service:
    build:
      context: .
      dockerfile: classification-service/Dockerfile
    environment:
      - CLASSIFICATION_MODEL_NAME=${CLASSIFICATION_MODEL_NAME}
      - GRPC_CLASSIFICATION_SERVICE_HOST=${GRPC_CLASSIFICATION_SERVICE_HOST}
      - GRPC_CLASSIFICATION_SERVICE_PORT=${GRPC_CLASSIFICATION_SERVICE_PORT}

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /home/${USER}/.pgdata:/var/lib/postgresql/data/pgdata
      - ./migrations/data:/etc/postgres/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    tty: true
    stdin_open: true

  redis:
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    volumes:
      - /home/${USER}/.redisdata:/data
      - ./scripts/redis-init.sh:/etc/redis/init.sh
    command: > 
      sh -c "
        chmod a+x /etc/redis/init.sh &&
        /etc/redis/init.sh
      "
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 12s
      timeout: 10s
      retries: 3

  tester:
    build:
      context: .
      dockerfile: tests/Dockerfile
    environment:
      - HTTP_HOST=${HTTP_HOST}
      - HTTP_PORT=${HTTP_PORT}
    profiles:
      - test
    depends_on:
      envoy-gateway:
        condition: service_started
