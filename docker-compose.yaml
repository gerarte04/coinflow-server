services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      collection-service:
        condition: service_started
      storage-service:
        condition: service_started
    healthcheck:
      test: curl --fail -X GET http://api-gateway:8080/health || exit 1
      interval: 10s
      timeout: 1s
      retries: 1

  storage-service:
    build:
      context: .
      dockerfile: storage-service/Dockerfile
    depends_on:
      collection-service:
        condition: service_started
      postgres:
        condition: service_healthy

  collection-service:
    build:
      context: .
      dockerfile: collection-service/Dockerfile
    environment:
      - TRANSLATE_API_ADDRESS=${TRANSLATE_API_ADDRESS}
      - TRANSLATE_API_KEY=${TRANSLATE_API_KEY}
    depends_on:
      classification-service:
        condition: service_started
      postgres:
        condition: service_healthy

  classification-service:
    build:
      context: .
      dockerfile: classification-service/Dockerfile
    environment:
      - CLASSIFICATION_MODEL_NAME=${CLASSIFICATION_MODEL_NAME}
      - GRPC_CLASSIFICATION_SERVICE_HOST=${GRPC_CLASSIFICATION_SERVICE_HOST}
      - GRPC_CLASSIFICATION_SERVICE_PORT=${GRPC_CLASSIFICATION_SERVICE_PORT}

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /home/${USER}/.pgdata:/var/lib/postgresql/data/pgdata
      - ./migrations/data:/etc/postgres/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    tty: true
    stdin_open: true

  tester:
    build:
      context: .
      dockerfile: tests/Dockerfile
    environment:
      - HTTP_HOST=${HTTP_HOST}
      - HTTP_PORT=${HTTP_PORT}
    profiles:
      - test
    depends_on:
      api-gateway:
        condition: service_healthy
