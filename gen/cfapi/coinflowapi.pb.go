// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/coinflowapi.proto

package cfapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Cost          float64                `protobuf:"fixed64,6,opt,name=cost,proto3" json:"cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_proto_coinflowapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coinflowapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_coinflowapi_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transaction) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Transaction) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type PostTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ts            *Transaction           `protobuf:"bytes,2,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostTransactionRequest) Reset() {
	*x = PostTransactionRequest{}
	mi := &file_proto_coinflowapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTransactionRequest) ProtoMessage() {}

func (x *PostTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coinflowapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTransactionRequest.ProtoReflect.Descriptor instead.
func (*PostTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_coinflowapi_proto_rawDescGZIP(), []int{1}
}

func (x *PostTransactionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostTransactionRequest) GetTs() *Transaction {
	if x != nil {
		return x.Ts
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TsId          string                 `protobuf:"bytes,2,opt,name=ts_id,json=tsId,proto3" json:"ts_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	mi := &file_proto_coinflowapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coinflowapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_coinflowapi_proto_rawDescGZIP(), []int{2}
}

func (x *GetTransactionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransactionRequest) GetTsId() string {
	if x != nil {
		return x.TsId
	}
	return ""
}

type PostTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TsId          string                 `protobuf:"bytes,1,opt,name=ts_id,json=tsId,proto3" json:"ts_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostTransactionResponse) Reset() {
	*x = PostTransactionResponse{}
	mi := &file_proto_coinflowapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTransactionResponse) ProtoMessage() {}

func (x *PostTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coinflowapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTransactionResponse.ProtoReflect.Descriptor instead.
func (*PostTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_coinflowapi_proto_rawDescGZIP(), []int{3}
}

func (x *PostTransactionResponse) GetTsId() string {
	if x != nil {
		return x.TsId
	}
	return ""
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            *Transaction           `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	mi := &file_proto_coinflowapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coinflowapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_coinflowapi_proto_rawDescGZIP(), []int{4}
}

func (x *GetTransactionResponse) GetTs() *Transaction {
	if x != nil {
		return x.Ts
	}
	return nil
}

var File_proto_coinflowapi_proto protoreflect.FileDescriptor

const file_proto_coinflowapi_proto_rawDesc = "" +
	"\n" +
	"\x17proto/coinflowapi.proto\x12\fcoinflow_api\"\x9b\x01\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x12\n" +
	"\x04cost\x18\x06 \x01(\x01R\x04cost\"\\\n" +
	"\x16PostTransactionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12)\n" +
	"\x02ts\x18\x02 \x01(\v2\x19.coinflow_api.TransactionR\x02ts\"E\n" +
	"\x15GetTransactionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x13\n" +
	"\x05ts_id\x18\x02 \x01(\tR\x04tsId\".\n" +
	"\x17PostTransactionResponse\x12\x13\n" +
	"\x05ts_id\x18\x01 \x01(\tR\x04tsId\"C\n" +
	"\x16GetTransactionResponse\x12)\n" +
	"\x02ts\x18\x01 \x01(\v2\x19.coinflow_api.TransactionR\x02ts2\xc7\x01\n" +
	"\bCoinflow\x12^\n" +
	"\x0fPostTransaction\x12$.coinflow_api.PostTransactionRequest\x1a%.coinflow_api.PostTransactionResponse\x12[\n" +
	"\x0eGetTransaction\x12#.coinflow_api.GetTransactionRequest\x1a$.coinflow_api.GetTransactionResponseB\fZ\n" +
	"gen/cfapi/b\x06proto3"

var (
	file_proto_coinflowapi_proto_rawDescOnce sync.Once
	file_proto_coinflowapi_proto_rawDescData []byte
)

func file_proto_coinflowapi_proto_rawDescGZIP() []byte {
	file_proto_coinflowapi_proto_rawDescOnce.Do(func() {
		file_proto_coinflowapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_coinflowapi_proto_rawDesc), len(file_proto_coinflowapi_proto_rawDesc)))
	})
	return file_proto_coinflowapi_proto_rawDescData
}

var file_proto_coinflowapi_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_coinflowapi_proto_goTypes = []any{
	(*Transaction)(nil),             // 0: coinflow_api.Transaction
	(*PostTransactionRequest)(nil),  // 1: coinflow_api.PostTransactionRequest
	(*GetTransactionRequest)(nil),   // 2: coinflow_api.GetTransactionRequest
	(*PostTransactionResponse)(nil), // 3: coinflow_api.PostTransactionResponse
	(*GetTransactionResponse)(nil),  // 4: coinflow_api.GetTransactionResponse
}
var file_proto_coinflowapi_proto_depIdxs = []int32{
	0, // 0: coinflow_api.PostTransactionRequest.ts:type_name -> coinflow_api.Transaction
	0, // 1: coinflow_api.GetTransactionResponse.ts:type_name -> coinflow_api.Transaction
	1, // 2: coinflow_api.Coinflow.PostTransaction:input_type -> coinflow_api.PostTransactionRequest
	2, // 3: coinflow_api.Coinflow.GetTransaction:input_type -> coinflow_api.GetTransactionRequest
	3, // 4: coinflow_api.Coinflow.PostTransaction:output_type -> coinflow_api.PostTransactionResponse
	4, // 5: coinflow_api.Coinflow.GetTransaction:output_type -> coinflow_api.GetTransactionResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_coinflowapi_proto_init() }
func file_proto_coinflowapi_proto_init() {
	if File_proto_coinflowapi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_coinflowapi_proto_rawDesc), len(file_proto_coinflowapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_coinflowapi_proto_goTypes,
		DependencyIndexes: file_proto_coinflowapi_proto_depIdxs,
		MessageInfos:      file_proto_coinflowapi_proto_msgTypes,
	}.Build()
	File_proto_coinflowapi_proto = out.File
	file_proto_coinflowapi_proto_goTypes = nil
	file_proto_coinflowapi_proto_depIdxs = nil
}
